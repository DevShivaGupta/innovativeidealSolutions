{"version":3,"file":"static/js/640.c1b620eb.chunk.js","mappings":"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","sources":["../node_modules/@mantine/core/src/SimpleGrid/SimpleGrid.styles.ts","../node_modules/@mantine/core/src/SimpleGrid/get-sorted-breakpoints/get-sorted-breakpoints.ts","../node_modules/@mantine/core/src/SimpleGrid/SimpleGrid.tsx","screens/contact/ContactPage.js"],"sourcesContent":["import { createStyles, MantineNumberSize } from '@mantine/styles';\nimport { getSortedBreakpoints } from './get-sorted-breakpoints/get-sorted-breakpoints';\n\nexport interface SimpleGridBreakpoint {\n  maxWidth?: MantineNumberSize;\n  minWidth?: MantineNumberSize;\n  cols: number;\n  spacing?: MantineNumberSize;\n}\n\nexport interface SimpleGridStylesParams {\n  spacing: MantineNumberSize;\n  breakpoints: SimpleGridBreakpoint[];\n  cols: number;\n}\n\nexport default createStyles((theme, { spacing, breakpoints, cols }: SimpleGridStylesParams) => {\n  const gridBreakpoints = getSortedBreakpoints(theme, breakpoints).reduce((acc, breakpoint) => {\n    const property = 'maxWidth' in breakpoint ? 'max-width' : 'min-width';\n    const breakpointSize = theme.fn.size({\n      size: property === 'max-width' ? breakpoint.maxWidth : breakpoint.minWidth,\n      sizes: theme.breakpoints,\n    });\n\n    acc[`@media (${property}: ${breakpointSize + (property === 'max-width' ? 0 : 1)}px)`] = {\n      gridTemplateColumns: `repeat(${breakpoint.cols}, minmax(0, 1fr))`,\n      gap: theme.fn.size({\n        size: breakpoint.spacing || spacing,\n        sizes: theme.spacing,\n      }),\n    };\n\n    return acc;\n  }, {});\n\n  return {\n    root: {\n      boxSizing: 'border-box',\n      display: 'grid',\n      gridTemplateColumns: `repeat(${cols}, minmax(0, 1fr))`,\n      gap: theme.fn.size({ size: spacing, sizes: theme.spacing }),\n      ...gridBreakpoints,\n    },\n  };\n});\n","import { MantineTheme } from '@mantine/styles';\n\nexport function getSortedBreakpoints<T extends Record<string, any>>(\n  theme: MantineTheme,\n  breakpoints: T[]\n) {\n  if (breakpoints.length === 0) {\n    return breakpoints;\n  }\n\n  const property = 'maxWidth' in breakpoints[0] ? 'maxWidth' : 'minWidth';\n  const sorted = [...breakpoints].sort(\n    (a, b) =>\n      theme.fn.size({ size: b[property], sizes: theme.breakpoints }) -\n      theme.fn.size({ size: a[property], sizes: theme.breakpoints })\n  );\n\n  return property === 'minWidth' ? sorted.reverse() : sorted;\n}\n","import React, { forwardRef } from 'react';\nimport { DefaultProps, MantineNumberSize, useComponentDefaultProps } from '@mantine/styles';\nimport { Box } from '../Box';\nimport useStyles, { SimpleGridBreakpoint, SimpleGridStylesParams } from './SimpleGrid.styles';\n\nexport interface SimpleGridProps\n  extends DefaultProps<never, SimpleGridStylesParams>,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Breakpoints data to change items per row and spacing based on max-width */\n  breakpoints?: SimpleGridBreakpoint[];\n\n  /** Default amount of columns, used when none of breakpoints can be applied  */\n  cols?: number;\n\n  /** Default spacing between columns, used when none of breakpoints can be applied */\n  spacing?: MantineNumberSize;\n}\n\nconst defaultProps: Partial<SimpleGridProps> = {\n  breakpoints: [],\n  cols: 1,\n  spacing: 'md',\n};\n\nexport const SimpleGrid = forwardRef<HTMLDivElement, SimpleGridProps>((props, ref) => {\n  const { className, breakpoints, cols, spacing, children, unstyled, ...others } =\n    useComponentDefaultProps('SimpleGrid', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    { breakpoints, cols, spacing },\n    { unstyled, name: 'SimpleGrid' }\n  );\n\n  return (\n    <Box className={cx(classes.root, className)} ref={ref} {...others}>\n      {children}\n    </Box>\n  );\n});\n\nSimpleGrid.displayName = '@mantine/core/SimpleGrid';\n","import {\r\n  createStyles,\r\n  Text,\r\n  Title,\r\n  SimpleGrid,\r\n  TextInput,\r\n  Textarea,\r\n  Button,\r\n  Group,\r\n  ActionIcon,\r\n  Container,\r\n} from \"@mantine/core\";\r\nimport {\r\n  IconBrandTwitter,\r\n  IconBrandYoutube,\r\n  IconBrandInstagram,\r\n} from \"@tabler/icons\";\r\nimport { ContactIconsList } from \"./ContactIconsList\";\r\nimport { useEffect } from \"react\";\r\nimport Fade from \"react-reveal/Fade\";\r\nconst useStyles = createStyles((theme) => ({\r\n  mainWrapper: {\r\n    marginTop: \"100px\",\r\n    [`@media (max-width: ${theme.breakpoints.sm}px)`]: {\r\n      maxWidth: \"90%\",\r\n      marginTop: \"50px\",\r\n    },\r\n  },\r\n  wrapper: {\r\n    minHeight: 400,\r\n    boxSizing: \"border-box\",\r\n    backgroundImage: `linear-gradient(-60deg, ${\r\n      theme.colorScheme === \"light\"\r\n        ? theme.colors[theme.primaryColor][4]\r\n        : theme.colors.dark[4]\r\n    } 0%, ${\r\n      theme.colorScheme === \"light\"\r\n        ? theme.colors[theme.primaryColor][7]\r\n        : theme.colors.dark[3]\r\n    } 100%)`,\r\n    borderRadius: theme.radius.md,\r\n    padding: theme.spacing.xl * 2.5,\r\n\r\n    [`@media (max-width: ${theme.breakpoints.sm}px)`]: {\r\n      padding: theme.spacing.xl * 1.5,\r\n    },\r\n  },\r\n\r\n  title: {\r\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\r\n    color: theme.white,\r\n    lineHeight: 1,\r\n  },\r\n\r\n  description: {\r\n    color: theme.colors[theme.primaryColor][0],\r\n    maxWidth: 300,\r\n\r\n    [`@media (max-width: ${theme.breakpoints.sm}px)`]: {\r\n      maxWidth: \"100%\",\r\n    },\r\n  },\r\n\r\n  form: {\r\n    background: theme.colorScheme === \"light\" ? \"white\" : theme.colors.dark[7],\r\n    padding: theme.spacing.xl,\r\n    borderRadius: theme.radius.md,\r\n    boxShadow: theme.shadows.lg,\r\n  },\r\n\r\n  social: {\r\n    color: theme.white,\r\n\r\n    \"&:hover\": {\r\n      color: theme.colors[theme.primaryColor][1],\r\n    },\r\n  },\r\n\r\n  control: {\r\n    backgroundColor: theme.colors[theme.primaryColor][6],\r\n  },\r\n}));\r\n\r\nconst social = [IconBrandTwitter, IconBrandYoutube, IconBrandInstagram];\r\n\r\nexport default function ContactPage() {\r\n  const { classes } = useStyles();\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n  }, []);\r\n  const icons = social.map((Icon, index) => (\r\n    <ActionIcon\r\n      key={index}\r\n      size={28}\r\n      className={classes.social}\r\n      variant=\"transparent\"\r\n    >\r\n      <Icon size={22} stroke={1.5} />\r\n    </ActionIcon>\r\n  ));\r\n\r\n  return (\r\n    <Fade bottom>\r\n      <Container size={\"74%\"} className={classes.mainWrapper}>\r\n        <div className={classes.wrapper}>\r\n          <SimpleGrid\r\n            cols={2}\r\n            spacing={50}\r\n            breakpoints={[{ maxWidth: \"sm\", cols: 1 }]}\r\n          >\r\n            <div>\r\n              <Title className={classes.title}>Contact us</Title>\r\n              <Text className={classes.description} mt=\"sm\" mb={30}>\r\n                Leave your email and we will get back to you within 24 hours\r\n              </Text>\r\n\r\n              <ContactIconsList variant=\"white\" />\r\n\r\n              <Group mt=\"xl\">{icons}</Group>\r\n            </div>\r\n            <div className={classes.form}>\r\n              <TextInput\r\n                label=\"Email\"\r\n                placeholder=\"your@email.com\"\r\n                required\r\n                classNames={{ input: classes.input, label: classes.inputLabel }}\r\n              />\r\n              <TextInput\r\n                label=\"Name\"\r\n                placeholder=\"Your Name\"\r\n                mt=\"md\"\r\n                classNames={{ input: classes.input, label: classes.inputLabel }}\r\n              />\r\n              <Textarea\r\n                required\r\n                label=\"Message\"\r\n                placeholder=\"Your Message\"\r\n                minRows={4}\r\n                mt=\"md\"\r\n                classNames={{ input: classes.input, label: classes.inputLabel }}\r\n              />\r\n\r\n              <Group position=\"right\" mt=\"md\">\r\n                <Button className={classes.control}>Send message</Button>\r\n              </Group>\r\n            </div>\r\n          </SimpleGrid>\r\n        </div>\r\n      </Container>\r\n    </Fade>\r\n  );\r\n}\r\n"],"names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","createStyles","theme","spacing","breakpoints","cols","gridBreakpoints","length","property","sorted","sort","fn","size","sizes","reverse","getSortedBreakpoints","reduce","acc","breakpoint","breakpointSize","maxWidth","minWidth","gridTemplateColumns","gap","root","boxSizing","display","defaultProps","SimpleGrid","forwardRef","props","ref","useComponentDefaultProps","className","_a","children","unstyled","others","source","exclude","target","indexOf","__objRest","useStyles","name","classes","cx","React","Box","displayName","mainWrapper","marginTop","sm","wrapper","minHeight","backgroundImage","colorScheme","colors","primaryColor","dark","borderRadius","radius","md","padding","xl","title","fontFamily","color","white","lineHeight","description","form","background","boxShadow","shadows","lg","social","control","backgroundColor","IconBrandTwitter","IconBrandYoutube","IconBrandInstagram","ContactPage","useEffect","window","scrollTo","top","left","behavior","icons","map","Icon","index","ActionIcon","A","variant","stroke","bottom","Container","Title","Text","mt","mb","ContactIconsList","Group","TextInput","label","placeholder","required","classNames","input","inputLabel","Textarea","minRows","position","Button"],"sourceRoot":""}